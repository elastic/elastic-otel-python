name: Release

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main

permissions:
  contents: read

jobs:
  packages:
    permissions:
      attestations: write
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - run: pip install build==1.2.1

      - run: python -m build

      - name: generate build provenance
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be # v2.4.0
        with:
          subject-path: "${{ github.workspace }}/dist/*"

      - name: Upload Packages
        uses: actions/upload-artifact@v4
        with:
          name: packages
          path: |
            dist/*.whl
            dist/*tar.gz

  publish-pypi:
    needs:
      - packages
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: dist

      - name: Upload pypi.org
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          repository-url: https://upload.pypi.org/legacy/

  publish-docker:
    needs:
      - packages
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write
      contents: write
    env:
      DOCKER_IMAGE_NAME: docker.elastic.co/observability/elastic-otel-python
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Log in to the Elastic Container registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ${{ secrets.ELASTIC_DOCKER_REGISTRY }}
          username: ${{ secrets.ELASTIC_DOCKER_USERNAME }}
          password: ${{ secrets.ELASTIC_DOCKER_PASSWORD }}

      - uses: actions/download-artifact@v4
        with:
          name: packages
          path: dist

      - name: Extract metadata (tags, labels)
        id: docker-meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804  # v5.7.0
        with:
          images: ${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            # "edge" Docker tag on git push to default branch
            type=edge
          labels: |
            org.opencontainers.image.vendor=Elastic
            org.opencontainers.image.title=elastic-otel-python
            org.opencontainers.image.description=Elastic Distribution of OpenTelemetry Python

      - name: Build and push image
        id: docker-push
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83  # v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          file: operator/Dockerfile
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
          build-args: |
            DISTRO_DIR=./dist/

      - name: generate build provenance (containers)
        uses: actions/attest-build-provenance@e8998f949152b193b063cb0ec769d69d929409be  # v2.4.0
        with:
          subject-name: "${{ env.DOCKER_IMAGE_NAME }}"
          subject-digest: ${{ steps.docker-push.outputs.digest }}
          push-to-registry: true
